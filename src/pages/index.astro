---
import DefaultLayout from '../layouts/Default.astro';
import Container from '../components/Container.astro';

import { getCollection } from 'astro:content';
import { createSearchIndex, formatPostDate, sortPostsByDate } from '../helpers/blog';
import type { PostProps } from '../types/blog';

const posts: PostProps[] = await getCollection('blog');
const sortedPosts = sortPostsByDate(posts);
const searchIndex = createSearchIndex(posts);
---

<DefaultLayout>
  <Container>
    <script type="application/json" id="blog-posts-json" set:html={JSON.stringify(searchIndex)} />
    <section class="pb-10 pt-8" data-testid="hero-banner">
      <h1 class="font-(--font-bold) text-3xl my-2">Procure um assunto</h1>
      <form>
        <input
          class="bg-white p-3 rounded-sm shadow-2xl text-abyss-500 w-full"
          id="search-input"
          max-length="20"
          name="search"
          placeholder="Digite e as postagens serÃ£o filtradas"
          type="text"
        />
      </form>
    </section>
    <section class="my-8" data-testid="section-posts" id="section-posts">
      <ul data-testid="posts-list" id="posts-list">
        {
          sortedPosts.map((post: any) => (
            <li data-testid={post.id} id={post.id}>
              <a class="block mb-12" href={`/${post.id}`}>
                <datetime class="text-sm">
                  {formatPostDate(post.data.date)}
                </datetime>
                <h2 class="font-(--font-bold) text-xl">{post.data.title}</h2>
              </a>
            </li>
          ))
        }
      </ul>
      <div
        aria-live="polite"
        class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative hidden"
        id="search-alert"
        role="alert"
      >
        <strong class="font-bold">Eita!</strong>
        <span class="block sm:inline">Nenhum resultado encontrado.</span>
      </div>
    </section>
  </Container>
</DefaultLayout>

<script>
  import { debounce } from 'src/utils/debounce';
  import { handleKeyDown, initFuse, updatePostList } from '../helpers/blog';

  const searchAlert = document.getElementById('search-alert') as HTMLElement;
  const searchInput = document.getElementById('search-input') as HTMLElement;
  const postList = document.getElementById('posts-list') as HTMLElement;
  const allPosts = Array.from(postList.children) as HTMLElement[];

  const searchIndex = document.getElementById('blog-posts-json')?.textContent || '';

  let fuse: any = initFuse(searchIndex);

  const debouncedSearch = debounce((event: Event) => updatePostList({
    event,
    fuse,
    allPosts,
    searchAlert,
    postListElement: postList,
  }), 300);

  searchInput?.addEventListener('keydown', handleKeyDown);
  searchInput?.addEventListener('input', debouncedSearch);
</script>
